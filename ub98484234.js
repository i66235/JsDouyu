const CryptoJS = require('crypto-js');

var g506b413c91c = [0x39862dae, 0x678fec5f, 0xdd762179, 0xfb47ec7b, 0x17da9c49, 0xd83fcdcd, 0x6645db5a, 0xd2c98cb0, 0xf491c082, 0x7e99c236, 0x17f32ef3, 0x22f23d91, 0xecc793b8, 0xc554068e, 0xbf3110a9, 0x4bdc60fd, 0xf1115f1f, 0xf8802485, 0x40619932, 0x9c98ff76, 0x47c62871, 0x655682ed, 0x544e6a7a, 0x7092d5d7, 0x6e947228, 0xa408fae8, 0x34134010, 0xd5b96aac, 0x1a4e4f30, 0x79456b35, 0xe9eb83b1, 0xf615620e, 0xd66e6ff3, 0x62211961, 0xf340eb67, 0xe6f83137, 0xcd39ef15, 0xb106cc32, 0xdf3630cf, 0x6d412fd3, 0x59693953, 0x3de2a8e1, 0xda2e8252, 0x8d04daa7, 0x7b0e8504, 0x242f94fb, 0x60f64266, 0x84490dcf, 0x4785160a, 0xa2d22db2, 0xafee9d87, 0x7afa692e, 0x2a2fb59b, 0x1206787b, 0xfb24a197, 0x461d0b47, 0xac97e00, 0x6543dadc, 0xc1c2ec02, 0xd2ebd4c4, 0x40123039, 0x34fe29c0, 0x453fee3e, 0x6142f568, 0xbc34d0cc, 0xe65a89b2, 0x50104c51, 0x431372fe, 0x909b0b07, 0xad182947, 0x5913974b, 0xf60681fb, 0x79364fc3, 0x377c2034, 0xaefbe33f, 0x4ad0e3f9, 0xdc1b91d7, 0xda007ce6, 0x529ad575, 0x40d70091, 0xbc1de288, 0xc3eeec2b, 0x90edd01d, 0x20c78d76, 0x237614d8, 0xfd4954f0, 0x98d684e0, 0x1df8265, 0xe7e78343, 0xbf73c95e, 0x59e64663, 0xdef3e771, 0x5ed0f8ea, 0xad45a48f, 0xd2f73d32, 0xb81aac88, 0x36d091b3, 0xc9dfab7d, 0x8ee900e0, 0xe35a37e0, 0x96febd7a, 0xc2163eaf, 0xe25fa9c5, 0xa76600f4, 0x8db449f4, 0xd9bdcf7a, 0xda85ed69, 0xfdaec625, 0xa7ac352d, 0x55cf6b4a, 0x25f18e03, 0x5c35b1f1, 0x85759c1f, 0x8834d77c, 0xa3ae18c4, 0x811c2532, 0x965db523, 0x506fc6d4, 0x85d1c87c, 0x9b07a762, 0x237c8428, 0xb3a923cb, 0x452b5c64, 0xc76ebda, 0xc6579ed8, 0xfef01003, 0xeb0ac6dc, 0x94b67103, 0x79e3ded4, 0xb7352a86, 0xfc75a44e, 0x8d88a20a, 0x28dff88, 0xbb815066, 0x4fedd1dd, 0x7e996d5e, 0xc1ddb647, 0x6d529e16, 0x730d87cb, 0x5d785dd1, 0x7bbee72b, 0xcb31e914, 0x7fa20a04, 0x6038113a, 0xbb8343e6, 0xc0a3631e, 0xf3b4493b, 0x6029d165, 0x2c5dba28, 0x1b17cf32, 0xd3902266, 0x4ed56269, 0x6f26d026, 0xefb2cfed, 0xb03165a, 0x20a6fcd3, 0x8fd75f7d, 0xee14474a, 0x89dfb33d, 0x13e92e91, 0x1b68e0b5, 0x398a9985, 0x657acf00, 0xf9ac486, 0x38483728, 0x339cb424, 0x2600d3f6, 0xd0f83eb8, 0x96d16a6a, 0x2db7c03, 0x1ffd371e, 0xd94b058d, 0x3fca3178, 0x18a0c5ac, 0xe9acde27, 0xd10cdf08, 0x3e2a09d4, 0x27b3b8b3, 0x46664ede, 0xb957a3bb, 0x6e1eaa55, 0x728e8fd1, 0xc5c9901d, 0x8a53a346, 0xd4b17afe, 0x1cd703dc, 0x46eb6d7f, 0x8fb1e4e5, 0x9da4486b, 0x1db450c0, 0x858c59fd, 0xa07cfd47, 0xd9dcfb5a, 0x29d66e1c, 0x753d9f7c, 0x4c831740, 0xf461524e, 0x7a829149, 0x1b60e778, 0xeb33bb1d, 0x4bca702d, 0x3d69325, 0xac0b2cb2, 0x42a63346, 0x7256ae67, 0xc0f12661, 0x1e0d57a2, 0xaedabed9, 0x1af0fbe1, 0x3f682485, 0x5d5fcba7, 0xf16cb912, 0xe8d5e298, 0xf8ed41b3, 0x77bdd100, 0x173d28ad, 0x23b2ee1, 0x964d639e, 0x25dc0044, 0x86472aa, 0xe0c3d4d9, 0x42aebc81, 0x1b7fdc69, 0x88a4fc90, 0x59e23149, 0x85af08f6, 0xfa47b37f, 0xac7366c5, 0x24f81881, 0x57acb9f3, 0xe4ea206, 0xc25dde89, 0x445f5f59, 0x9e2c8bcd, 0xb40ae01, 0xa97d220f, 0xb884c182, 0x18f70dfb, 0x2dc8cd6c, 0xd649b4d3, 0xdaca68f9, 0x7df26401, 0x8eabbf01, 0x95150e7e, 0xe06a7b95, 0x30cd3ff8, 0xc133d1e7, 0xc8a3a1a3, 0xba1289de, 0x8a7cffaf, 0xeb7e498e, 0xb1528f37, 0x4681f70b, 0x732c1d0b, 0x544626eb, 0xe7e5c74a, 0xa61bbb13, 0x922a9e, 0x9a0fc37a, 0x2d18398b, 0x151f9496, 0x2a5a1ec2, 0xbeb3d8cf, 0x2a38919e, 0xb926d608, 0xf64f6b91, 0x91b9957d, 0xe2020082, 0x7af052ce, 0xa87438f5, 0x31be080c, 0xa378241e, 0x9d2a3c92, 0xcc938cbb, 0xbfc489ee, 0x8b6e622, 0x8678d5d, 0x6ccc034d, 0x597aa6e2, 0xabff1606, 0x7b42576d, 0x15e9b2a, 0xef900266, 0x6fcd10f7, 0xfb08331e, 0xd436408d, 0x9e65001a, 0xbf47b68, 0xca44f54d, 0x1a339d1c, 0xf76aa0a4, 0x4a7f183c, 0xbce163ec, 0x53c59ec6, 0x44d21f8c, 0xf6a9c037, 0x3d20607e, 0x1e36fd81, 0xc40e92fd, 0xb6bee7fd, 0xc1d00b2f, 0x74a9c655, 0xecb9436b, 0xf8ae7b1e, 0x39c8c3f4, 0xe0731d77, 0x49c54fca, 0xb61cd2dd, 0x9d9b7400, 0x9615fbf, 0x1e7bbc41, 0x272e2524, 0xbdd0e1ca, 0x22627852, 0x60afc4dc, 0x5c6c124d, 0x881a9006, 0xc7718563, 0x2e81a49c, 0x617539ce, 0xb33951b7, 0xeb7373aa, 0x5e32bf07, 0xb592c8fb, 0xf7296f69, 0x65e78e, 0x6890688e, 0xe698917a, 0xc906fc1, 0x43053fab, 0x251e1890, 0xaac962da, 0xc0fab386, 0x47d11cb1, 0xb69a7ae5, 0xd54de804, 0x71e9a10c, 0xb1b065eb, 0x90f22bcc, 0x4ceaacfc, 0x926dde11, 0x17b0a261, 0x108a3933, 0xa150bcda, 0x6c014fe4, 0x8030834f, 0x3af272e3, 0x5432786f, 0x64ddfa0a, 0xaac623e4, 0xf89d64a4, 0x437e2ab8, 0x3dbea198, 0x5081065c, 0xbd0eaaf9, 0x3f357efc, 0xabae6f5a, 0x2b3c6f28, 0xf9cc030, 0x8cc2ea3d, 0xead2e240, 0xc1cfb8cb, 0xbe03a260, 0x8999b8a7, 0xe4723431, 0x2a8805b, 0xfbdf1624, 0x9c04fa95, 0xb3231f2e, 0xebba88d6, 0xc76523e7, 0x76659b2, 0xb27ff02b, 0x210057ca, 0xe7e3c176, 0x253107b2, 0x37d3730e, 0xd8da1d34, 0x9936cc06, 0x4e650072, 0x234a2367, 0xd91abda9, 0xec640d4b, 0x9688a4d4, 0x938ec46c, 0x1607b8a, 0x79d475d5, 0x60034f3f, 0xe38897fd, 0x6e40040, 0x36185372, 0xe099f2a5, 0x8f617631, 0x7bbf1a75, 0x26775349, 0x5687554b, 0x6f129207, 0xd4fca8ca, 0x95a681a8, 0x83c5c978, 0xe967f877, 0x32d55877, 0x6e6a9aad, 0xf8b39d52, 0xee604ed9, 0x621af6b9, 0x2c6a9aa, 0xa42dd57d, 0xa6762210, 0x441d3647, 0xc2ae03bb, 0x90ba24, 0xeb461605, 0xb8ed2228, 0x39f1bd4b, 0x271e9a0d, 0x49d88568, 0x41e0d9d, 0xcce5387d, 0x70df1d23, 0xec7227a, 0xd420282c, 0x70b8860b, 0xefd5c0d4, 0x814fba0e, 0x4bf59446];
function ub98484234(g506b413c91c0, g506b413c91c1, g506b413c91c2) {
    var rk = [38, 10, 17, 27, 37, 23, 40, 22, 10, 38, 10, 17, 27, 37, 23, 40, 22, 10, 38, 10, 17, 27, 37, 23, 40, 22, 10, 38, 10, 17, 27, 37, 23, 40, 22, 10, 38, 10, 17, 27, 37, 23, 40, 22, 10, 38, 10, 17, 27, 37, 23, 40, 22, 10, 38, 10, 17, 27, 37, 23, 40, 22, 10, 38, 10, 17, 27, 37, 23, 40, 22, 10, 38, 10, 17, 27, 37, 23, 40, 22, 10, 38, 10, 17, 27, 37, 23, 40, 22, 10, 38, 10, 17, 27, 37, 23, 40, 22, 10, 38, 10, 17, 27, 37, 23, 40, 22, 10, 38, 10, 17, 27, 37, 23, 40, 22, 10, 38, 10, 17, 27, 37, 23, 40, 22, 10, 38, 10, 17, 27, 37, 23, 40, 22, 10, 38, 10, 17, 27, 37, 23, 40, 22, 10, 38, 10, 17, 27, 37, 23, 40, 22, 10, 38, 10, 17, 27, 37, 23, 40, 22, 10, 38, 10, 17, 27, 37, 23, 40, 22, 10, 38, 10, 17, 27, 37, 23, 40, 22, 10, 38, 10, 17, 27, 37, 23, 40, 22, 10, 38, 10, 17, 27, 37, 23, 40, 22, 10, 38, 10, 17, 27, 37, 23, 40, 22, 10, 38, 10, 17, 27, 37, 23];
    var k2 = [0x3914b091, 0xbb20ac5];
    var lk = [0x3914b091, 0xbb20ac5];
    var v = g506b413c91c.slice(0);
    var k = [0x3bbe6784, 0x6cd672ae, 0x96496df1, 0xbfe901eb];
    for (var O = 0; O < 426; O++) {
        v[O] ^= 0x48ffcfe2;
    }
    v[1] = (v[1] >>> (lk[1] % 16)) | (v[1] << (32 - (lk[1] % 16)));
    v[0] = (v[0] >>> (lk[0] % 16)) | (v[0] << (32 - (lk[0] % 16)));
    v[3] = (v[3] << (lk[1] % 16)) | (v[3] >>> (32 - (lk[1] % 16)));
    v[2] += lk[0];
    v[5] = (v[5] << (lk[1] % 16)) | (v[5] >>> (32 - (lk[1] % 16)));
    v[4] -= lk[0];
    v[7] += lk[1];
    v[6] = (v[6] << (lk[0] % 16)) | (v[6] >>> (32 - (lk[0] % 16)));
    v[9] += lk[1];
    v[8] += lk[0];
    v[11] = (v[11] >>> (lk[1] % 16)) | (v[11] << (32 - (lk[1] % 16)));
    v[10] = (v[10] << (lk[0] % 16)) | (v[10] >>> (32 - (lk[0] % 16)));
    v[13] -= lk[1];
    v[12] = (v[12] << (lk[0] % 16)) | (v[12] >>> (32 - (lk[0] % 16)));
    v[15] += lk[1];
    v[14] = (v[14] << (lk[0] % 16)) | (v[14] >>> (32 - (lk[0] % 16)));
    v[17] -= lk[1];
    v[16] -= lk[0];
    v[19] = (v[19] >>> (lk[1] % 16)) | (v[19] << (32 - (lk[1] % 16)));
    v[18] = (v[18] >>> (lk[0] % 16)) | (v[18] << (32 - (lk[0] % 16)));
    v[21] = (v[21] << (lk[1] % 16)) | (v[21] >>> (32 - (lk[1] % 16)));
    v[20] += lk[0];
    v[23] = (v[23] << (lk[1] % 16)) | (v[23] >>> (32 - (lk[1] % 16)));
    v[22] -= lk[0];
    v[25] += lk[1];
    v[24] = (v[24] << (lk[0] % 16)) | (v[24] >>> (32 - (lk[0] % 16)));
    v[27] += lk[1];
    v[26] += lk[0];
    v[29] = (v[29] >>> (lk[1] % 16)) | (v[29] << (32 - (lk[1] % 16)));
    v[28] = (v[28] << (lk[0] % 16)) | (v[28] >>> (32 - (lk[0] % 16)));
    v[31] -= lk[1];
    v[30] = (v[30] << (lk[0] % 16)) | (v[30] >>> (32 - (lk[0] % 16)));
    v[33] += lk[1];
    v[32] = (v[32] << (lk[0] % 16)) | (v[32] >>> (32 - (lk[0] % 16)));
    v[35] -= lk[1];
    v[34] -= lk[0];
    v[37] = (v[37] >>> (lk[1] % 16)) | (v[37] << (32 - (lk[1] % 16)));
    v[36] = (v[36] >>> (lk[0] % 16)) | (v[36] << (32 - (lk[0] % 16)));
    v[39] = (v[39] << (lk[1] % 16)) | (v[39] >>> (32 - (lk[1] % 16)));
    v[38] += lk[0];
    v[41] = (v[41] << (lk[1] % 16)) | (v[41] >>> (32 - (lk[1] % 16)));
    v[40] -= lk[0];
    v[43] += lk[1];
    v[42] = (v[42] << (lk[0] % 16)) | (v[42] >>> (32 - (lk[0] % 16)));
    v[45] += lk[1];
    v[44] += lk[0];
    v[47] = (v[47] >>> (lk[1] % 16)) | (v[47] << (32 - (lk[1] % 16)));
    v[46] = (v[46] << (lk[0] % 16)) | (v[46] >>> (32 - (lk[0] % 16)));
    v[49] -= lk[1];
    v[48] = (v[48] << (lk[0] % 16)) | (v[48] >>> (32 - (lk[0] % 16)));
    v[51] += lk[1];
    v[50] = (v[50] << (lk[0] % 16)) | (v[50] >>> (32 - (lk[0] % 16)));
    v[53] -= lk[1];
    v[52] -= lk[0];
    v[55] = (v[55] >>> (lk[1] % 16)) | (v[55] << (32 - (lk[1] % 16)));
    v[54] = (v[54] >>> (lk[0] % 16)) | (v[54] << (32 - (lk[0] % 16)));
    v[57] = (v[57] << (lk[1] % 16)) | (v[57] >>> (32 - (lk[1] % 16)));
    v[56] += lk[0];
    v[59] = (v[59] << (lk[1] % 16)) | (v[59] >>> (32 - (lk[1] % 16)));
    v[58] -= lk[0];
    v[61] += lk[1];
    v[60] = (v[60] << (lk[0] % 16)) | (v[60] >>> (32 - (lk[0] % 16)));
    v[63] += lk[1];
    v[62] += lk[0];
    v[65] = (v[65] >>> (lk[1] % 16)) | (v[65] << (32 - (lk[1] % 16)));
    v[64] = (v[64] << (lk[0] % 16)) | (v[64] >>> (32 - (lk[0] % 16)));
    v[67] -= lk[1];
    v[66] = (v[66] << (lk[0] % 16)) | (v[66] >>> (32 - (lk[0] % 16)));
    v[69] += lk[1];
    v[68] = (v[68] << (lk[0] % 16)) | (v[68] >>> (32 - (lk[0] % 16)));
    v[71] -= lk[1];
    v[70] -= lk[0];
    v[73] = (v[73] >>> (lk[1] % 16)) | (v[73] << (32 - (lk[1] % 16)));
    v[72] = (v[72] >>> (lk[0] % 16)) | (v[72] << (32 - (lk[0] % 16)));
    v[75] = (v[75] << (lk[1] % 16)) | (v[75] >>> (32 - (lk[1] % 16)));
    v[74] += lk[0];
    v[77] = (v[77] << (lk[1] % 16)) | (v[77] >>> (32 - (lk[1] % 16)));
    v[76] -= lk[0];
    v[79] += lk[1];
    v[78] = (v[78] << (lk[0] % 16)) | (v[78] >>> (32 - (lk[0] % 16)));
    v[81] += lk[1];
    v[80] += lk[0];
    v[83] = (v[83] >>> (lk[1] % 16)) | (v[83] << (32 - (lk[1] % 16)));
    v[82] = (v[82] << (lk[0] % 16)) | (v[82] >>> (32 - (lk[0] % 16)));
    v[85] -= lk[1];
    v[84] = (v[84] << (lk[0] % 16)) | (v[84] >>> (32 - (lk[0] % 16)));
    v[87] += lk[1];
    v[86] = (v[86] << (lk[0] % 16)) | (v[86] >>> (32 - (lk[0] % 16)));
    v[89] -= lk[1];
    v[88] -= lk[0];
    v[91] = (v[91] >>> (lk[1] % 16)) | (v[91] << (32 - (lk[1] % 16)));
    v[90] = (v[90] >>> (lk[0] % 16)) | (v[90] << (32 - (lk[0] % 16)));
    v[93] = (v[93] << (lk[1] % 16)) | (v[93] >>> (32 - (lk[1] % 16)));
    v[92] += lk[0];
    v[95] = (v[95] << (lk[1] % 16)) | (v[95] >>> (32 - (lk[1] % 16)));
    v[94] -= lk[0];
    v[97] += lk[1];
    v[96] = (v[96] << (lk[0] % 16)) | (v[96] >>> (32 - (lk[0] % 16)));
    v[99] += lk[1];
    v[98] += lk[0];
    v[101] = (v[101] >>> (lk[1] % 16)) | (v[101] << (32 - (lk[1] % 16)));
    v[100] = (v[100] << (lk[0] % 16)) | (v[100] >>> (32 - (lk[0] % 16)));
    v[103] -= lk[1];
    v[102] = (v[102] << (lk[0] % 16)) | (v[102] >>> (32 - (lk[0] % 16)));
    v[105] += lk[1];
    v[104] = (v[104] << (lk[0] % 16)) | (v[104] >>> (32 - (lk[0] % 16)));
    v[107] -= lk[1];
    v[106] -= lk[0];
    v[109] = (v[109] >>> (lk[1] % 16)) | (v[109] << (32 - (lk[1] % 16)));
    v[108] = (v[108] >>> (lk[0] % 16)) | (v[108] << (32 - (lk[0] % 16)));
    v[111] = (v[111] << (lk[1] % 16)) | (v[111] >>> (32 - (lk[1] % 16)));
    v[110] += lk[0];
    v[113] = (v[113] << (lk[1] % 16)) | (v[113] >>> (32 - (lk[1] % 16)));
    v[112] -= lk[0];
    v[115] += lk[1];
    v[114] = (v[114] << (lk[0] % 16)) | (v[114] >>> (32 - (lk[0] % 16)));
    v[117] += lk[1];
    v[116] += lk[0];
    v[119] = (v[119] >>> (lk[1] % 16)) | (v[119] << (32 - (lk[1] % 16)));
    v[118] = (v[118] << (lk[0] % 16)) | (v[118] >>> (32 - (lk[0] % 16)));
    v[121] -= lk[1];
    v[120] = (v[120] << (lk[0] % 16)) | (v[120] >>> (32 - (lk[0] % 16)));
    v[123] += lk[1];
    v[122] = (v[122] << (lk[0] % 16)) | (v[122] >>> (32 - (lk[0] % 16)));
    v[125] -= lk[1];
    v[124] -= lk[0];
    v[127] = (v[127] >>> (lk[1] % 16)) | (v[127] << (32 - (lk[1] % 16)));
    v[126] = (v[126] >>> (lk[0] % 16)) | (v[126] << (32 - (lk[0] % 16)));
    v[129] = (v[129] << (lk[1] % 16)) | (v[129] >>> (32 - (lk[1] % 16)));
    v[128] += lk[0];
    v[131] = (v[131] << (lk[1] % 16)) | (v[131] >>> (32 - (lk[1] % 16)));
    v[130] -= lk[0];
    v[133] += lk[1];
    v[132] = (v[132] << (lk[0] % 16)) | (v[132] >>> (32 - (lk[0] % 16)));
    v[135] += lk[1];
    v[134] += lk[0];
    v[137] = (v[137] >>> (lk[1] % 16)) | (v[137] << (32 - (lk[1] % 16)));
    v[136] = (v[136] << (lk[0] % 16)) | (v[136] >>> (32 - (lk[0] % 16)));
    v[139] -= lk[1];
    v[138] = (v[138] << (lk[0] % 16)) | (v[138] >>> (32 - (lk[0] % 16)));
    v[141] += lk[1];
    v[140] = (v[140] << (lk[0] % 16)) | (v[140] >>> (32 - (lk[0] % 16)));
    v[143] -= lk[1];
    v[142] -= lk[0];
    v[145] = (v[145] >>> (lk[1] % 16)) | (v[145] << (32 - (lk[1] % 16)));
    v[144] = (v[144] >>> (lk[0] % 16)) | (v[144] << (32 - (lk[0] % 16)));
    v[147] = (v[147] << (lk[1] % 16)) | (v[147] >>> (32 - (lk[1] % 16)));
    v[146] += lk[0];
    v[149] = (v[149] << (lk[1] % 16)) | (v[149] >>> (32 - (lk[1] % 16)));
    v[148] -= lk[0];
    v[151] += lk[1];
    v[150] = (v[150] << (lk[0] % 16)) | (v[150] >>> (32 - (lk[0] % 16)));
    v[153] += lk[1];
    v[152] += lk[0];
    v[155] = (v[155] >>> (lk[1] % 16)) | (v[155] << (32 - (lk[1] % 16)));
    v[154] = (v[154] << (lk[0] % 16)) | (v[154] >>> (32 - (lk[0] % 16)));
    v[157] -= lk[1];
    v[156] = (v[156] << (lk[0] % 16)) | (v[156] >>> (32 - (lk[0] % 16)));
    v[159] += lk[1];
    v[158] = (v[158] << (lk[0] % 16)) | (v[158] >>> (32 - (lk[0] % 16)));
    v[161] -= lk[1];
    v[160] -= lk[0];
    v[163] = (v[163] >>> (lk[1] % 16)) | (v[163] << (32 - (lk[1] % 16)));
    v[162] = (v[162] >>> (lk[0] % 16)) | (v[162] << (32 - (lk[0] % 16)));
    v[165] = (v[165] << (lk[1] % 16)) | (v[165] >>> (32 - (lk[1] % 16)));
    v[164] += lk[0];
    v[167] = (v[167] << (lk[1] % 16)) | (v[167] >>> (32 - (lk[1] % 16)));
    v[166] -= lk[0];
    v[169] += lk[1];
    v[168] = (v[168] << (lk[0] % 16)) | (v[168] >>> (32 - (lk[0] % 16)));
    v[171] += lk[1];
    v[170] += lk[0];
    v[173] = (v[173] >>> (lk[1] % 16)) | (v[173] << (32 - (lk[1] % 16)));
    v[172] = (v[172] << (lk[0] % 16)) | (v[172] >>> (32 - (lk[0] % 16)));
    v[175] -= lk[1];
    v[174] = (v[174] << (lk[0] % 16)) | (v[174] >>> (32 - (lk[0] % 16)));
    v[177] += lk[1];
    v[176] = (v[176] << (lk[0] % 16)) | (v[176] >>> (32 - (lk[0] % 16)));
    v[179] -= lk[1];
    v[178] -= lk[0];
    v[181] = (v[181] >>> (lk[1] % 16)) | (v[181] << (32 - (lk[1] % 16)));
    v[180] = (v[180] >>> (lk[0] % 16)) | (v[180] << (32 - (lk[0] % 16)));
    v[183] = (v[183] << (lk[1] % 16)) | (v[183] >>> (32 - (lk[1] % 16)));
    v[182] += lk[0];
    v[185] = (v[185] << (lk[1] % 16)) | (v[185] >>> (32 - (lk[1] % 16)));
    v[184] -= lk[0];
    v[187] += lk[1];
    v[186] = (v[186] << (lk[0] % 16)) | (v[186] >>> (32 - (lk[0] % 16)));
    v[189] += lk[1];
    v[188] += lk[0];
    v[191] = (v[191] >>> (lk[1] % 16)) | (v[191] << (32 - (lk[1] % 16)));
    v[190] = (v[190] << (lk[0] % 16)) | (v[190] >>> (32 - (lk[0] % 16)));
    v[193] -= lk[1];
    v[192] = (v[192] << (lk[0] % 16)) | (v[192] >>> (32 - (lk[0] % 16)));
    v[195] += lk[1];
    v[194] = (v[194] << (lk[0] % 16)) | (v[194] >>> (32 - (lk[0] % 16)));
    v[197] -= lk[1];
    v[196] -= lk[0];
    v[199] = (v[199] >>> (lk[1] % 16)) | (v[199] << (32 - (lk[1] % 16)));
    v[198] = (v[198] >>> (lk[0] % 16)) | (v[198] << (32 - (lk[0] % 16)));
    v[201] = (v[201] << (lk[1] % 16)) | (v[201] >>> (32 - (lk[1] % 16)));
    v[200] += lk[0];
    v[203] = (v[203] << (lk[1] % 16)) | (v[203] >>> (32 - (lk[1] % 16)));
    v[202] -= lk[0];
    v[205] += lk[1];
    v[204] = (v[204] << (lk[0] % 16)) | (v[204] >>> (32 - (lk[0] % 16)));
    v[207] += lk[1];
    v[206] += lk[0];
    v[209] = (v[209] >>> (lk[1] % 16)) | (v[209] << (32 - (lk[1] % 16)));
    v[208] = (v[208] << (lk[0] % 16)) | (v[208] >>> (32 - (lk[0] % 16)));
    v[211] -= lk[1];
    v[210] = (v[210] << (lk[0] % 16)) | (v[210] >>> (32 - (lk[0] % 16)));
    v[213] += lk[1];
    v[212] = (v[212] << (lk[0] % 16)) | (v[212] >>> (32 - (lk[0] % 16)));
    v[215] -= lk[1];
    v[214] -= lk[0];
    v[217] = (v[217] >>> (lk[1] % 16)) | (v[217] << (32 - (lk[1] % 16)));
    v[216] = (v[216] >>> (lk[0] % 16)) | (v[216] << (32 - (lk[0] % 16)));
    v[219] = (v[219] << (lk[1] % 16)) | (v[219] >>> (32 - (lk[1] % 16)));
    v[218] += lk[0];
    v[221] = (v[221] << (lk[1] % 16)) | (v[221] >>> (32 - (lk[1] % 16)));
    v[220] -= lk[0];
    v[223] += lk[1];
    v[222] = (v[222] << (lk[0] % 16)) | (v[222] >>> (32 - (lk[0] % 16)));
    v[225] += lk[1];
    v[224] += lk[0];
    v[227] = (v[227] >>> (lk[1] % 16)) | (v[227] << (32 - (lk[1] % 16)));
    v[226] = (v[226] << (lk[0] % 16)) | (v[226] >>> (32 - (lk[0] % 16)));
    v[229] -= lk[1];
    v[228] = (v[228] << (lk[0] % 16)) | (v[228] >>> (32 - (lk[0] % 16)));
    v[231] += lk[1];
    v[230] = (v[230] << (lk[0] % 16)) | (v[230] >>> (32 - (lk[0] % 16)));
    v[233] -= lk[1];
    v[232] -= lk[0];
    v[235] = (v[235] >>> (lk[1] % 16)) | (v[235] << (32 - (lk[1] % 16)));
    v[234] = (v[234] >>> (lk[0] % 16)) | (v[234] << (32 - (lk[0] % 16)));
    v[237] = (v[237] << (lk[1] % 16)) | (v[237] >>> (32 - (lk[1] % 16)));
    v[236] += lk[0];
    v[239] = (v[239] << (lk[1] % 16)) | (v[239] >>> (32 - (lk[1] % 16)));
    v[238] -= lk[0];
    v[241] += lk[1];
    v[240] = (v[240] << (lk[0] % 16)) | (v[240] >>> (32 - (lk[0] % 16)));
    v[243] += lk[1];
    v[242] += lk[0];
    v[245] = (v[245] >>> (lk[1] % 16)) | (v[245] << (32 - (lk[1] % 16)));
    v[244] = (v[244] << (lk[0] % 16)) | (v[244] >>> (32 - (lk[0] % 16)));
    v[247] -= lk[1];
    v[246] = (v[246] << (lk[0] % 16)) | (v[246] >>> (32 - (lk[0] % 16)));
    v[249] += lk[1];
    v[248] = (v[248] << (lk[0] % 16)) | (v[248] >>> (32 - (lk[0] % 16)));
    v[251] -= lk[1];
    v[250] -= lk[0];
    v[253] = (v[253] >>> (lk[1] % 16)) | (v[253] << (32 - (lk[1] % 16)));
    v[252] = (v[252] >>> (lk[0] % 16)) | (v[252] << (32 - (lk[0] % 16)));
    v[255] = (v[255] << (lk[1] % 16)) | (v[255] >>> (32 - (lk[1] % 16)));
    v[254] += lk[0];
    v[257] = (v[257] << (lk[1] % 16)) | (v[257] >>> (32 - (lk[1] % 16)));
    v[256] -= lk[0];
    v[259] += lk[1];
    v[258] = (v[258] << (lk[0] % 16)) | (v[258] >>> (32 - (lk[0] % 16)));
    v[261] += lk[1];
    v[260] += lk[0];
    v[263] = (v[263] >>> (lk[1] % 16)) | (v[263] << (32 - (lk[1] % 16)));
    v[262] = (v[262] << (lk[0] % 16)) | (v[262] >>> (32 - (lk[0] % 16)));
    v[265] -= lk[1];
    v[264] = (v[264] << (lk[0] % 16)) | (v[264] >>> (32 - (lk[0] % 16)));
    v[267] += lk[1];
    v[266] = (v[266] << (lk[0] % 16)) | (v[266] >>> (32 - (lk[0] % 16)));
    v[269] -= lk[1];
    v[268] -= lk[0];
    v[271] = (v[271] >>> (lk[1] % 16)) | (v[271] << (32 - (lk[1] % 16)));
    v[270] = (v[270] >>> (lk[0] % 16)) | (v[270] << (32 - (lk[0] % 16)));
    v[273] = (v[273] << (lk[1] % 16)) | (v[273] >>> (32 - (lk[1] % 16)));
    v[272] += lk[0];
    v[275] = (v[275] << (lk[1] % 16)) | (v[275] >>> (32 - (lk[1] % 16)));
    v[274] -= lk[0];
    v[277] += lk[1];
    v[276] = (v[276] << (lk[0] % 16)) | (v[276] >>> (32 - (lk[0] % 16)));
    v[279] += lk[1];
    v[278] += lk[0];
    v[281] = (v[281] >>> (lk[1] % 16)) | (v[281] << (32 - (lk[1] % 16)));
    v[280] = (v[280] << (lk[0] % 16)) | (v[280] >>> (32 - (lk[0] % 16)));
    v[283] -= lk[1];
    v[282] = (v[282] << (lk[0] % 16)) | (v[282] >>> (32 - (lk[0] % 16)));
    v[285] += lk[1];
    v[284] = (v[284] << (lk[0] % 16)) | (v[284] >>> (32 - (lk[0] % 16)));
    v[287] -= lk[1];
    v[286] -= lk[0];
    v[289] = (v[289] >>> (lk[1] % 16)) | (v[289] << (32 - (lk[1] % 16)));
    v[288] = (v[288] >>> (lk[0] % 16)) | (v[288] << (32 - (lk[0] % 16)));
    v[291] = (v[291] << (lk[1] % 16)) | (v[291] >>> (32 - (lk[1] % 16)));
    v[290] += lk[0];
    v[293] = (v[293] << (lk[1] % 16)) | (v[293] >>> (32 - (lk[1] % 16)));
    v[292] -= lk[0];
    v[295] += lk[1];
    v[294] = (v[294] << (lk[0] % 16)) | (v[294] >>> (32 - (lk[0] % 16)));
    v[297] += lk[1];
    v[296] += lk[0];
    v[299] = (v[299] >>> (lk[1] % 16)) | (v[299] << (32 - (lk[1] % 16)));
    v[298] = (v[298] << (lk[0] % 16)) | (v[298] >>> (32 - (lk[0] % 16)));
    v[301] -= lk[1];
    v[300] = (v[300] << (lk[0] % 16)) | (v[300] >>> (32 - (lk[0] % 16)));
    v[303] += lk[1];
    v[302] = (v[302] << (lk[0] % 16)) | (v[302] >>> (32 - (lk[0] % 16)));
    v[305] -= lk[1];
    v[304] -= lk[0];
    v[307] = (v[307] >>> (lk[1] % 16)) | (v[307] << (32 - (lk[1] % 16)));
    v[306] = (v[306] >>> (lk[0] % 16)) | (v[306] << (32 - (lk[0] % 16)));
    v[309] = (v[309] << (lk[1] % 16)) | (v[309] >>> (32 - (lk[1] % 16)));
    v[308] += lk[0];
    v[311] = (v[311] << (lk[1] % 16)) | (v[311] >>> (32 - (lk[1] % 16)));
    v[310] -= lk[0];
    v[313] += lk[1];
    v[312] = (v[312] << (lk[0] % 16)) | (v[312] >>> (32 - (lk[0] % 16)));
    v[315] += lk[1];
    v[314] += lk[0];
    v[317] = (v[317] >>> (lk[1] % 16)) | (v[317] << (32 - (lk[1] % 16)));
    v[316] = (v[316] << (lk[0] % 16)) | (v[316] >>> (32 - (lk[0] % 16)));
    v[319] -= lk[1];
    v[318] = (v[318] << (lk[0] % 16)) | (v[318] >>> (32 - (lk[0] % 16)));
    v[321] += lk[1];
    v[320] = (v[320] << (lk[0] % 16)) | (v[320] >>> (32 - (lk[0] % 16)));
    v[323] -= lk[1];
    v[322] -= lk[0];
    v[325] = (v[325] >>> (lk[1] % 16)) | (v[325] << (32 - (lk[1] % 16)));
    v[324] = (v[324] >>> (lk[0] % 16)) | (v[324] << (32 - (lk[0] % 16)));
    v[327] = (v[327] << (lk[1] % 16)) | (v[327] >>> (32 - (lk[1] % 16)));
    v[326] += lk[0];
    v[329] = (v[329] << (lk[1] % 16)) | (v[329] >>> (32 - (lk[1] % 16)));
    v[328] -= lk[0];
    v[331] += lk[1];
    v[330] = (v[330] << (lk[0] % 16)) | (v[330] >>> (32 - (lk[0] % 16)));
    v[333] += lk[1];
    v[332] += lk[0];
    v[335] = (v[335] >>> (lk[1] % 16)) | (v[335] << (32 - (lk[1] % 16)));
    v[334] = (v[334] << (lk[0] % 16)) | (v[334] >>> (32 - (lk[0] % 16)));
    v[337] -= lk[1];
    v[336] = (v[336] << (lk[0] % 16)) | (v[336] >>> (32 - (lk[0] % 16)));
    v[339] += lk[1];
    v[338] = (v[338] << (lk[0] % 16)) | (v[338] >>> (32 - (lk[0] % 16)));
    v[341] -= lk[1];
    v[340] -= lk[0];
    v[343] = (v[343] >>> (lk[1] % 16)) | (v[343] << (32 - (lk[1] % 16)));
    v[342] = (v[342] >>> (lk[0] % 16)) | (v[342] << (32 - (lk[0] % 16)));
    v[345] = (v[345] << (lk[1] % 16)) | (v[345] >>> (32 - (lk[1] % 16)));
    v[344] += lk[0];
    v[347] = (v[347] << (lk[1] % 16)) | (v[347] >>> (32 - (lk[1] % 16)));
    v[346] -= lk[0];
    v[349] += lk[1];
    v[348] = (v[348] << (lk[0] % 16)) | (v[348] >>> (32 - (lk[0] % 16)));
    v[351] += lk[1];
    v[350] += lk[0];
    v[353] = (v[353] >>> (lk[1] % 16)) | (v[353] << (32 - (lk[1] % 16)));
    v[352] = (v[352] << (lk[0] % 16)) | (v[352] >>> (32 - (lk[0] % 16)));
    v[355] -= lk[1];
    v[354] = (v[354] << (lk[0] % 16)) | (v[354] >>> (32 - (lk[0] % 16)));
    v[357] += lk[1];
    v[356] = (v[356] << (lk[0] % 16)) | (v[356] >>> (32 - (lk[0] % 16)));
    v[359] -= lk[1];
    v[358] -= lk[0];
    v[361] = (v[361] >>> (lk[1] % 16)) | (v[361] << (32 - (lk[1] % 16)));
    v[360] = (v[360] >>> (lk[0] % 16)) | (v[360] << (32 - (lk[0] % 16)));
    v[363] = (v[363] << (lk[1] % 16)) | (v[363] >>> (32 - (lk[1] % 16)));
    v[362] += lk[0];
    v[365] = (v[365] << (lk[1] % 16)) | (v[365] >>> (32 - (lk[1] % 16)));
    v[364] -= lk[0];
    v[367] += lk[1];
    v[366] = (v[366] << (lk[0] % 16)) | (v[366] >>> (32 - (lk[0] % 16)));
    v[369] += lk[1];
    v[368] += lk[0];
    v[371] = (v[371] >>> (lk[1] % 16)) | (v[371] << (32 - (lk[1] % 16)));
    v[370] = (v[370] << (lk[0] % 16)) | (v[370] >>> (32 - (lk[0] % 16)));
    v[373] -= lk[1];
    v[372] = (v[372] << (lk[0] % 16)) | (v[372] >>> (32 - (lk[0] % 16)));
    v[375] += lk[1];
    v[374] = (v[374] << (lk[0] % 16)) | (v[374] >>> (32 - (lk[0] % 16)));
    v[377] -= lk[1];
    v[376] -= lk[0];
    v[379] = (v[379] >>> (lk[1] % 16)) | (v[379] << (32 - (lk[1] % 16)));
    v[378] = (v[378] >>> (lk[0] % 16)) | (v[378] << (32 - (lk[0] % 16)));
    v[381] = (v[381] << (lk[1] % 16)) | (v[381] >>> (32 - (lk[1] % 16)));
    v[380] += lk[0];
    v[383] = (v[383] << (lk[1] % 16)) | (v[383] >>> (32 - (lk[1] % 16)));
    v[382] -= lk[0];
    v[385] += lk[1];
    v[384] = (v[384] << (lk[0] % 16)) | (v[384] >>> (32 - (lk[0] % 16)));
    v[387] += lk[1];
    v[386] += lk[0];
    v[389] = (v[389] >>> (lk[1] % 16)) | (v[389] << (32 - (lk[1] % 16)));
    v[388] = (v[388] << (lk[0] % 16)) | (v[388] >>> (32 - (lk[0] % 16)));
    v[391] -= lk[1];
    v[390] = (v[390] << (lk[0] % 16)) | (v[390] >>> (32 - (lk[0] % 16)));
    v[393] += lk[1];
    v[392] = (v[392] << (lk[0] % 16)) | (v[392] >>> (32 - (lk[0] % 16)));
    v[395] -= lk[1];
    v[394] -= lk[0];
    v[397] = (v[397] >>> (lk[1] % 16)) | (v[397] << (32 - (lk[1] % 16)));
    v[396] = (v[396] >>> (lk[0] % 16)) | (v[396] << (32 - (lk[0] % 16)));
    v[399] = (v[399] << (lk[1] % 16)) | (v[399] >>> (32 - (lk[1] % 16)));
    v[398] += lk[0];
    v[401] = (v[401] << (lk[1] % 16)) | (v[401] >>> (32 - (lk[1] % 16)));
    v[400] -= lk[0];
    v[403] += lk[1];
    v[402] = (v[402] << (lk[0] % 16)) | (v[402] >>> (32 - (lk[0] % 16)));
    v[405] += lk[1];
    v[404] += lk[0];
    v[407] = (v[407] >>> (lk[1] % 16)) | (v[407] << (32 - (lk[1] % 16)));
    v[406] = (v[406] << (lk[0] % 16)) | (v[406] >>> (32 - (lk[0] % 16)));
    v[409] -= lk[1];
    v[408] = (v[408] << (lk[0] % 16)) | (v[408] >>> (32 - (lk[0] % 16)));
    v[411] += lk[1];
    v[410] = (v[410] << (lk[0] % 16)) | (v[410] >>> (32 - (lk[0] % 16)));
    v[413] -= lk[1];
    v[412] -= lk[0];
    v[415] = (v[415] >>> (lk[1] % 16)) | (v[415] << (32 - (lk[1] % 16)));
    v[414] = (v[414] >>> (lk[0] % 16)) | (v[414] << (32 - (lk[0] % 16)));
    v[417] = (v[417] << (lk[1] % 16)) | (v[417] >>> (32 - (lk[1] % 16)));
    v[416] += lk[0];
    v[419] = (v[419] << (lk[1] % 16)) | (v[419] >>> (32 - (lk[1] % 16)));
    v[418] -= lk[0];
    v[421] += lk[1];
    v[420] = (v[420] << (lk[0] % 16)) | (v[420] >>> (32 - (lk[0] % 16)));
    v[423] += lk[1];
    v[422] += lk[0];
    v[425] = (v[425] >>> (lk[1] % 16)) | (v[425] << (32 - (lk[1] % 16)));
    v[424] = (v[424] << (lk[0] % 16)) | (v[424] >>> (32 - (lk[0] % 16)));
    for (var I = 0; I < 426; I += 2) {
        var i, v0 = v[I] ^ k2[0], v1 = v[I + 1] ^ k2[1], d = 0x9E3779B9, sum = d * rk[I / 2];
        for (i = 0; i < rk[I / 2]; i++) {
            v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
            sum -= d;
            v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
        }
        v[I] = v0 ^ k2[1];
        v[I + 1] = v1 ^ k2[0];
    }
    for (var O = 425; O > 0; O--) {
        v[O] ^= v[O - 1];
    }
    v[0] ^= 0x48ffcfe2;
    var strc = "";
    for (var i = 0; i < v.length; i++) {
        strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
    }
    return eval(strc)(g506b413c91c0, g506b413c91c1, g506b413c91c2);
}


module.exports = ub98484234; // 导出greet函数